<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.indieAndBob.mapper.game">

   	<select id="selectGameById" parameterType="int" resultType="gameall">
		select g.*, gd.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join game_detail gd using(game_id) left outer join user u using(nickname)
		where game_id=#{game_id}
    </select>
    <select id="selectAllGame" parameterType="int" resultType="gameall">
   	    select g.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join user u using(nickname)
   	    where is_approve=1 and is_end=false order by game_id desc limit #{page},10
    </select>
    <select id="selectAllGameAdmin" parameterType="int" resultType="gameall">
    	select g.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join user u using(nickname) where is_approve=0 and is_end=false limit #{page},10;
    </select>
    <insert id="registerGame" useGeneratedKeys="true" keyProperty="gameId" parameterType="gameall">
        insert into game (name, deadline, aim,left_price, nickname,
        thumbnail)
        values (#{name}, #{deadline}, #{aim},#{aim},#{nickname},
        #{thumbnail})
    </insert>
    <update id="updateGame" parameterType="gameall">
    	update game set name=#{name}, deadline=#{deadline}, aim=#{aim}, updated_at=now(), thumbnail=#{thumbnail},
    	reason=null
        where game_id=#{gameId}
    </update>
    <delete id="deleteGameById" parameterType="int">
    	delete from game where game_id=#{gameId}
    </delete>
    <insert id="registerGameDetail" parameterType="gameall">
    	insert into game_detail (game_id, content) values(#{gameId}, #{content})
    </insert>
    <insert id="gameLike" parameterType="gamelike">
    	insert into game_like (nickname,game_id) values(#{nickname},#{gameId})
    </insert>
    
    <select id="selectGameByNickname" parameterType="mygamesearch" resultType="gameall">
    	select g.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join user u using(nickname)
    	where game_id in (select game_id from game_like where nickname=#{nickname})
    	order by game_id desc
    	limit #{page},9
    </select>
    
    <select id="selectUserByGameId" parameterType="String" resultType="user">
    	select * from user 
    	where nickname in (select nickname from game_like where game_id=#{gameId});
    </select>
    
    <delete id="deleteGameLike" parameterType="gameLike">
    	delete from game_like where nickname=#{nickname} and game_id=#{gameId}
    </delete>
    
    <select id="isLike" parameterType="gamelike" resultType="gamelike">
    	select * from game_like where nickname=#{nickname} and game_id=#{gameId}
    </select>
    
    <update id="updateApprove" parameterType="game">
    	update game set is_approve=#{isApprove}, reason=#{reason} where game_id=#{gameId}
    </update>
    
    <update id="fundingGame" parameterType="funding">
    	update game set left_price=left_price-#{money} where game_id=#{gameId}
    </update>
    
    <insert id="insertGameGenre" parameterType="gamegenre">
    	insert into game_genre (game_id,genre_id) values(#{gameId},#{genreId})
    </insert>
    
    <select id="selectMadeGameByNickname" parameterType="mygamesearch" resultType="gameall">
    	select g.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join user u using(nickname)
   	    where nickname=#{nickname} order by game_id desc limit #{page},9
    </select>
    
    <update id="injectThumbnail" parameterType="gameall">
    	update game set thumbnail=#{thumbnail} where game_id=#{gameId}
    </update>
    
    <delete id="deleteGameGenre" parameterType="int">
    	delete from game_genre where game_id=#{gameId}
    </delete>
    
    <select id="mostLikeGame" resultType="gamealllike">
    	select ga.*, u.profile, DATEDIFF(deadline, now()) as left_day from (select g.*, count(*) count from game_like left outer join game g using(game_id) 
		where is_approve=1 and date_format(deadline, '%Y-%m-%d') >= date_sub(now(),interval 1 day) 
		group by game_id) ga left outer join user u using(nickname)
		order by count desc limit 5
    </select>
    
    <select id="deadlineGame" resultType="gameall">
    	select g.*, u.profile, DATEDIFF(deadline, now()) as left_day from game g left outer join user u using(nickname)
		where is_approve=1 and date_format(deadline, '%Y-%m-%d') >= date_sub(now(),interval 1 day) and 0 &lt; left_price/aim
        and left_price/aim &lt; 0.2
		order by deadline limit 5
    </select>
    
    <select id="mostFundedPriceGame" resultType="gameall">
    	select *, DATEDIFF(deadline, now()) as left_day from game
		where is_approve=1 and date_format(deadline, '%Y-%m-%d') >= date_sub(now(),interval 1 day)
		order by aim-left_price desc limit 5
    </select>
    
    <select id="mostFundedPercentGame" resultType="gameall">
    	select *, DATEDIFF(deadline, now()) as left_day from game
		where is_approve=1 and date_format(deadline, '%Y-%m-%d') >= date_sub(now(),interval 1 day)
		order by (aim-left_price)/aim desc limit 5
    </select>
    
    <update id="gameSubmit" parameterType="int">
    	update game set is_approve=0 where game_id=#{gameId}
    </update>

	<update id="endDay">
		update game set is_end=true where date_format(deadline, '%Y-%m-%d') &lt; date_sub(now(),interval 1 day)
	</update>
</mapper>